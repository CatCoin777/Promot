[
    {
        "instance_id": "astropy__astropy-13838",
        "description_list": [
            {
                "image_id": "1",
                "context": "The first image appears to be a code snippet or output related to the issue.",
                "description": "The image shows a code snippet or output with the text 'QTable(rows=events[0])' at the top, followed by 'QTable length=3'. Below this, there are three rows labeled 'col0', 'str1', 'A', 'B', and 'C'. The text is presented in a monospace font, indicating it is likely code or output from a programming environment.",
                "technical_details": "The text 'QTable(rows=events[0])' suggests the use of a QTable object with rows from the first element of an 'events' list. The 'QTable length=3' indicates the table has three columns. The labels 'col0', 'str1', 'A', 'B', and 'C' likely represent column names or data types."
            },
            {
                "image_id": "2",
                "context": "The second image appears to be another code snippet or output related to the issue.",
                "description": "The image shows a code snippet or output with the text 'QTable(rows=events)' at the top, followed by 'QTable length=3'. Below this, there is a table with three columns labeled 'A', 'B', and 'C'. The rows contain data types 'int64', 'int64', and 'object', followed by rows of data with values '0', '0', '[]', '1', '0', '[]', and '2', '2', '[0 1]'. The text is presented in a monospace font, indicating it is likely code or output from a programming environment.",
                "technical_details": "The text 'QTable(rows=events)' suggests the use of a QTable object with rows from an 'events' list. The 'QTable length=3' indicates the table has three columns. The table shows data types for each column ('int64', 'int64', 'object') and specific data values, including an empty array '[]' and an array '[0 1]'."
            }
        ]
    },
    {
        "instance_id": "matplotlib__matplotlib-22931",
        "description_list": [
            {
                "image_id": "1",
                "context": "The image is a screenshot of a Matplotlib plot generated by the code provided in the issue.",
                "description": "The image shows a simple line plot with a single blue line that starts at the origin (0,0) and extends to the point (1,1) on a Cartesian coordinate system. The x-axis ranges from 0 to 1, and the y-axis also ranges from 0 to 1. The plot has a white background, and the line is a solid blue color. The plot is displayed in a window with a title bar labeled 'Figure 1'. The window includes a toolbar at the top with various icons for home, back, forward, download, zoom, and other plot manipulation tools.",
                "technical_details": "The plot is generated using Matplotlib, as indicated by the toolbar and the style of the plot. The line is specified with a linestyle parameter 'ls=(0, ())', which is causing an issue as per the bug report."
            }
        ]
    },
    {
        "instance_id": "matplotlib__matplotlib-24189",
        "description_list": [
            {
                "image_id": "1",
                "context": "The image is part of a bug report for a matplotlib issue related to using subplot_mosaic with nested mosaics and width_ratios.",
                "description": "The image shows a simple matplotlib plot with three subplots arranged in a mosaic pattern. The main subplot is labeled 'A' and occupies the left half of the plot. To the right of 'A', there are two smaller subplots, 'B' and 'C', arranged vertically. 'B' is at the top right, and 'C' is directly below 'B'. The plot has a simple grid layout with axes ranging from 0 to 1 on both the x and y axes.",
                "technical_details": "The image demonstrates the intended layout when using matplotlib's subplot_mosaic function with a nested list mosaic and width_ratios specified. The layout is intended to have a main subplot 'A' with a width ratio of 2, and two smaller subplots 'B' and 'C' with a width ratio of 1."
            }
        ]
    },
    {
        "instance_id": "matplotlib__matplotlib-24768",
        "description_list": [
            {
                "image_id": "1",
                "context": "The image is a screenshot of a code snippet and its output related to a bug report in Matplotlib.",
                "description": "The image shows a color plot generated by Matplotlib with a circular grid pattern. The plot is divided into sectors with alternating colors, primarily shades of green, yellow, and purple. The x and y axes range from -10 to 10. In the center of the plot, there is a white circle with text inside that reads '3.7.0.dev447+g2d18bba0ea', indicating the version and commit hash of the Matplotlib library used. The plot appears to be demonstrating an issue with rasterization when using both `rasterized=True` and `set_rasterization_zorder()` together.",
                "technical_details": "The plot is created using the `pcolormesh()` function with `rasterized=True` and `set_rasterization_zorder()` set to a specific value. The version and commit hash of Matplotlib are displayed in the center of the plot, suggesting this is a test case for a bug related to rasterization."
            }
        ]
    },
    {
        "instance_id": "mwaskom__seaborn-3276",
        "description_list": [
            {
                "image_id": "1",
                "context": "The first image appears to show a heatmap generated using seaborn's heatmap function without specifying the norm argument.",
                "description": "The image displays a 3x26 grid of cells, representing a heatmap. Each cell is colored according to its value, with a colorbar on the right indicating the value range from 0.00 to 0.10. The rows are labeled A, B, and C, each with a value of 10, and the columns are labeled from A to Z, each with a value of 1. The cells are colored in shades of orange, with the intensity of the color corresponding to the value in the cell. The diagonal cells (A-A, B-B, C-C) are colored in a darker shade of orange, indicating a value of 0.10, while the off-diagonal cells are colored in a lighter shade of orange, indicating a value of 0.00. The heatmap is labeled 'predicted' at the bottom.",
                "technical_details": "The heatmap is generated using seaborn's heatmap function, with vmin=0.0, vmax=1.0, and norm=None specified. The colorbar indicates the value range from 0.00 to 0.10, with the darker shade of orange representing the higher value of 0.10 and the lighter shade representing the lower value of 0.00."
            },
            {
                "image_id": "2",
                "context": "The second image appears to show a heatmap generated using seaborn's heatmap function with vmin=0.0, vmax=1.0, and norm=None specified.",
                "description": "The image displays a 3x26 grid of cells, representing a heatmap. Each cell is colored according to its value, with a colorbar on the right indicating the value range from 0.00 to 0.10. The rows are labeled A, B, and C, each with a value of 10, and the columns are labeled from A to Z, each with a value of 1. The cells are colored in shades of black and white, with the intensity of the color corresponding to the value in the cell. The diagonal cells (A-A, B-B, C-C) are colored in black, indicating a value of 0.10, while the off-diagonal cells are colored in white, indicating a value of 0.00. The heatmap is labeled 'predicted' at the bottom.",
                "technical_details": "The heatmap is generated using seaborn's heatmap function, with vmin=0.0, vmax=1.0, and norm=None specified. The colorbar indicates the value range from 0.00 to 0.10, with black representing the higher value of 0.10 and white representing the lower value of 0.00."
            }
        ]
    },
    {
        "instance_id": "sphinx-doc__sphinx-11502",
        "description_list": [
            {
                "image_id": "1",
                "context": "The image is a screenshot of a note in the issue description.",
                "description": "The image shows a note in French that reads: 'Note: Cette page n'est pas encore compl√®tement traduite (avancement : 95%).' This translates to 'Note: This page is not yet completely translated (progress: 95%).'",
                "technical_details": "None"
            }
        ]
    },
    {
        "instance_id": "sphinx-doc__sphinx-9698",
        "description_list": [
            {
                "image_id": "1",
                "context": "The image is a screenshot of an index entry with parens registered for a `py:method` directive with a `:property:` option.",
                "description": "The image shows a section of an index with the heading 'Index' at the top. Below the heading, there are two entries under the letter 'B'. The first entry is 'bar() (Foo property)' and the second entry is 'baz (Foo property)'. The text is presented in a simple, clean format with a light background and dark text.",
                "technical_details": "The index entries are formatted with the method name followed by parentheses, which is the issue being described in the context of the bug report. The entries are listed under the letter 'B', indicating they are alphabetically sorted."
            }
        ]
    }
]